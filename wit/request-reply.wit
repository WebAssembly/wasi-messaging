/// The request-reply interface allows a guest to send a message and await a response. This
/// interface is considered optional as not all message services support the concept of
/// request/reply. However, request/reply is a very common pattern in messaging and as such, we have
/// included it as a core interface.
interface request-reply {
    use types.{client, message, error};

    /// Performs a blocking request/reply operation with an optional timeout. If the timeout value
    /// is not set, then the request/reply operation will block indefinitely.
    /// 
    /// Please note that implementations that provide `wasi:messaging` are responsible for ensuring
    /// that guests are not allowed to subscribe to channels that they are not configured to
    /// subscribe to (or have access to). Failure to do so can result in possible breakout or access
    /// to resources that are not intended to be accessible to the guest. This means implementations
    /// should validate that the reply-to field is a valid topic the guest should have access to or 
    /// enforce it via the credentials used to connect to the service.
    request: func(c: client, msg: message, timeout-ms: option<u32>) -> result<option<list<message>>, error>;
}